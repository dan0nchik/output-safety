version: '3.8'
services:

  # ─── Zookeeper ──────────────────────────────────────────────────────────
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    network_mode: host

  # ─── Kafka ──────────────────────────────────────────────────────────────
  kafka:
    image: confluentinc/cp-kafka:7.4.1
    depends_on:
      - zookeeper
    network_mode: host
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 127.0.0.1:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://84.201.147.126:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10

  # ─── MongoDB ─────────────────────────────────────────────────────────────
  mongo:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - backend

  # ─── API ────────────────────────────────────────────────────────────────
  api:
    build:
      context: .
      dockerfile: presentation/Dockerfile
    depends_on:
      - kafka
      - mongo
    ports:
      - "8000:8000"
    networks:
      - backend
    env_file:
      - .env

  # ─── Aggregator ────────────────────────────────────────────────────────────────
  aggregator:
      build:
        context: .
        dockerfile: workers/aggregator/Dockerfile
      container_name: aggregator
      depends_on:
        - kafka
        - mongo
      restart: unless-stopped
      env_file:
        - .env
      networks:
      - backend

volumes:
  mongo-data:

networks:
  backend:
    driver: bridge
